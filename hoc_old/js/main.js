"use strict";var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,n,s){return n&&e(t.prototype,n),s&&e(t,s),t}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}svg4everybody(),function(){var e=function(e,t){var n;n=function(t,n){bowser[t]&&document.documentElement.classList.add("is-"+e+"-"+n)},t.forEach(function(e){var t=void 0,s=void 0;"string"==typeof e?(t=e,s=e):(t=e[0],s=e[1]),n(t,s)})};e("engine",["blink","gecko",["msedge","edge"],["msie","ie"],"webkit"]),e("device",["mobile","tablet"]),e("browser",["android","bada","blackberry","chrome","firefox","ios","kMeleon",["msedge","edge"],["msie","ie"],"opera","phantom","qupzilla","safari","sailfish",["samsungBrowser","samsung"],"seamonkey","silk","sleipnir","tizen","ucbrowser","vivaldi","webos",["yandexbrowser","yandex"]]),e("os",["android","bada","blackberry","chromeos","firefoxos","ipad","iphone","ipod","ios","linux","mac","windows","windowsphone","sailfish","tizen","webos"])}();var $window=$(window),$document=$(document),$html=$(document.documentElement),$body=$(document.body),Render=function(){function e(t){_classCallCheck(this,e),this.random=!1,this.isAuto=!1,this.isActive=!1,this.shakeStat=!0,this.lsd={random:this.random,auto:this.isAuto,js:!0,jq:!1,aj:!1,bs:!1,fd:!1,ts:!1,an:!1,pug:!1,git:!1,sass:!1},this._countLanguages=0,this._activeLanguages=[],this.currentData=[],this.sectionsActive=[],this.currentCount=0,this.counter=-1,this.START=$(".control__start-btn"),this.PREV=$(".control__prev-btn"),this.NEXT=$(".control__next-btn"),this.MIX=$(".control__mix-btn"),this.localStorInit(),this.randomTo(this.random);var n=this.sectionsActive,s=[this.filterArr(JS),this.filterArr(JQ),this.filterArr(AJ),this.filterArr(BS),this.filterArr(FD),this.filterArr(TS),this.filterArr(AN),this.filterArr(PUG),this.filterArr(GIT),this.filterArr(SAS)];$(".main-menu .languages .cell").each(function(e){$(this).append('<div class="lang_sections" data-number="'+e+'"></div>');var t=$(this).find(".lang_sections");s[e].forEach(function(e,s){var a="";n.includes(""+e)&&(a=" is-active"),t.append('<div class="element'+a+'" data-cod="'+e+'">'+SECTIONS[e]+"</div>")}),t.append('<div class="element check-all is-active">Отменить все</div>'),$(this).hasClass("is-active")&&$(this).find(".lang_sections").slideDown(300)}),this.menuGetActives(),this.start()}return _createClass(e,[{key:"filterArr",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"r",n=[];return e.forEach(function(e,s){return n.push(e[t])}),n.filter(function(e,t,n){return t==n.indexOf(e)}).sort()}},{key:"menuSelectSection",value:function(e){if(e.hasClass("check-all")){e.parent().attr("data-number");e.hasClass("is-active")?e.text("Отменить все").siblings(".element").addClass("is-active"):e.text("Выделить все").siblings(".element").removeClass("is-active"),this.menuGetActives(),this.stop()}else this.menuGetActives(),this.isActive&&this.step()}},{key:"menuGetActives",value:function(){var e=[];$(".main-menu .languages .cell.is-active .lang_sections .element.is-active:not(.check-all)").each(function(){e.push($(this).attr("data-cod")),console.log($(this).attr("data-cod"))}),this.sectionsActive=e,localStorage.hsect=e.toString(),console.log("A: "+this.sectionsActive)}},{key:"localStorInit",value:function(){if(localStorage.hoc&&localStorage.hsect){this.lsd=JSON.parse(localStorage.hoc),this.sectionsActive=localStorage.hsect.split(",");var e=this.lsd;for(var t in e)e[t]&&$("#"+t).trigger("click").parent().parent().addClass("is-active");this.random=this.lsd.random,this.auto=this.lsd.auto}else writeToLS(this.lsd),$("#js:checked").length||$("#js").trigger("click").parent().parent().addClass("is-active");0==this.sectionsActive.length&&(this.sectionsActive[0]="0")}},{key:"getActiveLanguages",value:function(){var e=[];this.currentData=[],$(".languages [type=checkbox]:checked").each(function(){e.push({id:$(this).attr("id")})});var t=!0,n=!1,s=void 0;try{for(var a,r=e[Symbol.iterator]();!(t=(a=r.next()).done);t=!0){switch(a.value.id){case"js":JS.forEach(function(e){return e.lng="JavaScript"}),this.currentData=this.currentData.concat(JS);break;case"jq":JQ.forEach(function(e){return e.lng="jQuery"}),this.currentData=this.currentData.concat(JQ);break;case"aj":AJ.forEach(function(e){return e.lng="Ajax"}),this.currentData=this.currentData.concat(AJ);break;case"bs":BS.forEach(function(e){return e.lng="Bootstrap"}),this.currentData=this.currentData.concat(BS);break;case"fd":FD.forEach(function(e){return e.lng="Foundation"}),this.currentData=this.currentData.concat(FD);break;case"ts":TS.forEach(function(e){return e.lng="TypeScript"}),this.currentData=this.currentData.concat(TS);break;case"an":AN.forEach(function(e){return e.lng="Angular"}),this.currentData=this.currentData.concat(AN);break;case"pug":PUG.forEach(function(e){return e.lng="Pug"}),this.currentData=this.currentData.concat(PUG);break;case"git":GIT.forEach(function(e){return e.lng="git"}),this.currentData=this.currentData.concat(GIT);break;case"sass":SAS.forEach(function(e){return e.lng="SASS"}),this.currentData=this.currentData.concat(SAS);break;default:console.error("none to select!")}}}catch(e){n=!0,s=e}finally{try{!t&&r.return&&r.return()}finally{if(n)throw s}}this.currentCount=this.currentData.length,this._activeLanguages=e,this._countLanguages=e.length,$(".count-of-lng").text(this._countLanguages)}},{key:"randomTo",value:function(e){e?this.MIX.removeClass("is-disabled"):this.MIX.addClass("is-disabled")}},{key:"getFromData",value:function(e){return this.currentData[e]}},{key:"start",value:function(){0!=this.sectionsActive.length&&(this.getActiveLanguages(),this.isActive=!0,this.START.addClass("is-started").find(".play").addClass("is-hidden"),this.START.find(".stop").removeClass("is-hidden"),this.PREV.removeClass("is-disabled"),this.NEXT.removeClass("is-disabled"),this.random&&(this.MIX.removeClass("is-disabled"),this.shakeData()),this.step())}},{key:"shakeData",value:function(){this.shakeStat?(shakeArray(this.currentData),this.currentData.reverse(),shakeArray(this.currentData)):shakeArray(this.currentData)}},{key:"step",value:function(){this.isActive&&(this.counter++,this.counter>=this.currentData.length&&(this.counter=0),this.show())}},{key:"stepPrev",value:function(){this.isActive&&(this.counter--,this.counter<0&&(this.counter=this.currentData.length-1),this.show())}},{key:"show",value:function(){var e=this.getFromData(this.counter);if(this.sectionsActive.includes(e.r+"")){var t=Math.floor(e.f.length/90);$(".fn-container .code-wrapper").html(this.classCode(e.f)),$(".text-container h4").html(e.p),$(".text-container .description").html(this.makeDivs(e.d)),$(".text-container .post-description").html("").html(this.makeDivs(e.a)),void 0!==e.lng&&($(".title-of-lng").text(e.lng),$(".fn-container").attr("data-lang",e.lng.toLowerCase()).attr("data-font-size",t)),void 0!==e.r?$(".title-of-section").text(SECTIONS[+e.r]):$(".title-of-section").text("--")}else this.step()}},{key:"stop",value:function(){this.isActive=!1,this.counter=-1,this.START.removeClass("is-started").find(".stop").addClass("is-hidden"),this.START.find(".play").removeClass("is-hidden"),this.PREV.addClass("is-disabled"),this.NEXT.addClass("is-disabled"),this.MIX.addClass("is-disabled")}},{key:"classCode",value:function(e){var t;return t=e.replace(/(\b[a-z_]+)\./g,'<code class="obj">$1</code>.').replace(/class=["']obj["']>this</g,'class="this">this<').replace(/(this)(\))/g,'<code class="this">$1</code>$2').replace(/[{}()$#?:.,+-]+|(\s!?=(={1,2})?\s)|\s\|\|?\s|\s&&?\s|\s>\s|\s<\s|\s=>\s|\s>=\s|\s<=\s|\s\*\s|\s\/\s/g,'<code class="punct">$&</code>').replace(/`+/g,'<i class="tild">$&</i>').replace(/-?\d+(\.\d+)?/g,'<code class="dgt">$&</code>').replace(/(\/\/.+)$/gm,'<code class="comment">$&</code>').replace(/\b\w+:\s?/g,'<code class="vars2">$&</code>').replace(/\b(let|var|const|stat)\b\s/g,'<code class="vars">$&</code>').replace(/\b(function|constructor|return|import|export|extends|implements)\b\s?/g,'<code class="fun">$&</code>').replace(/\t/g,"&nbsp;&nbsp;").replace(/\*{2,}/g,function(e){return e.split("*").join("&nbsp;")}),this.makeDivs(t)}},{key:"makeDivs",value:function(e){if(!e)return"";var t="",n=e.split("\n");return n.length>1?(n.forEach(function(e){t+=e&&" "!=e?"<div>"+e+"</div>":'<div class="space-line">&nbsp</div>'}),t):e}},{key:"countLanguages",get:function(){return this._countLanguages}},{key:"activeLanguages",get:function(){return this._activeLanguages}}]),e}(),SECTIONS=["Операторы","Числа","Строки","RegExp","Массивы","Date()","Функции","Classes","Selector","Ser","Perr","PUT"],JS=[{f:"result = (size > 1) ? true : false;\n\n// сравнение уже возвращает логику, поэтому\n// если нужны только true и false, то можно короче:\nresult = size > 1;\n\n//*\n(name == 'Вася') ?\n   console.log('Да!') : console.log('Неверно!');",d:"",p:'Вопросительный знак "?"',a:"",r:0},{f:'"" + 1 + 2 => "12" // (1)\n"" - 1 + 0 => -1 // (2)\nnull + 1 => 1 // (3)\nundefined + 5 => NaN // (4)\n+null == +"\\n0\\n" => true // (5)\n\ntrue + false => 1\n8 / "4" => 2\n"2" * "4" => 8\n4 + 5 + "px" => "9px"\n"$" + 4 + 5 => "$45"\n"4" - 1 => 3\n"4px" - 2 => NaN\n7 / 0 => Infinity\n" -9\\n" + 5 => " -9\\n5"\n" -9\\n" - 5 => -14\n1 && 2 => 2\n2 && 1 => 1\n1 || 0 => 1\n0 || 2 => 2',d:"Преобразование типов",p:"Примитивы",a:'1. Оператор "+" прибавляет 1 как строку, затем 2.\n2. Оператор "-" работает только с числами, сразу приводит "" к 0.\n3. null при численном преобразовании -> 0\n4. undefined при численном преобразовании -> NaN\n5. И левая и правая часть == преобразуются к числу 0.',r:0},{f:"out:\n for (let i = 0; i < 10; i++) {\n\n**for (let j = 0; j < 10; j++) {\n\n****    // some code\n\n****if (val) break <b>out</b>;\n**}\n\n}",d:"",p:"Метки в циклах",a:"",r:0},{f:"switch (x) {\n\tcase 1:\n\t// ...\n\tbreak;\n\n\tcase 2:\n\tcase 3:\n\t// code ...\n\tbreak;\n\n\tdefault:\n\tconsole.log('Default');\n}",d:"Значения case можно группировать",p:"<i>switch</i>",a:"case 2 и case 3 выполняют один и тот же код",r:0},{f:"// факториал\nfunction factorial(n) {\n\treturn n ? n * factorial(n - 1) : 1;\n}\n\n// x в степени n\nfunction pow(x, n) {\n\tif (n != 1) {\n\t\treturn x * pow(x, n - 1);\n\t} else {\n\t\treturn x;\n\t}\n}",d:"",p:"Рекурсия",r:5},{f:"console.log( parseInt('20px') );  ****    // 20\nconsole.log( parseFloat('5.5volt') ); // 5.5\n\n\nconsole.log( parseInt('x100.0') ); // NaN\n\n\nconsole.log( parseInt('FF', 16) ); // 255\n",d:"Функции parseInt и parseFloat преобразуют строку символ за символом, пока это возможно",p:"<i>parseInt(), parseFloat()</i>",r:1},{f:"function isNumeric(n) {\n\treturn !isNaN(parseFloat(n)) && isFinite(n);\n}",d:"В результате можно вычислить числа и строки-числа.",p:"<i>isNumeric</i>",r:1},{f:"console.log( 4.toString(2) );  // 100\n\nconsole.log( 255.toString(16) ); // ff\n",d:"toString( основание системы числения )",p:"<i>num.toString()</i>",a:"Перевод числа в указанную систему числения",r:1},{f:"console.log( Math.floor(3.14) );  // 3\n\nconsole.log( Math.ceil(3.142) );  // 4\n\nconsole.log( Math.round(3.14) );  // 3\n\n\n// округление вниз\nconsole.log( ~~3.8 ); &nbsp; // 3\nconsole.log( 3.8 ^ 0 ); // 3\n",d:"Math.floor() - округляет вниз\n\nMath.ceil()  - округляет вверх\n\nMath.round() - округляет до ближайшего целого\n",p:"Округление",r:1},{f:'let n = 3.56;\n\nconsole.log( n.toFixed(1) );&nbsp; // "3.6"\n\nconsole.log( +n.toFixed(0) ); // 4\n',d:"Округляет число num до точности `precision` и возвращает результат в виде строки",p:"<i>num.toFixed(precision)</i>",a:"",r:1},{f:"function randomInt(min, max) {\n\tlet rand = min - 0.5 + Math.random() * (max - min + 1);\n\n\treturn Math.round(rand);\n}",d:"Случайное целое от min до max",p:"<i>Math.random()</i>",a:"",r:1},{f:'var str = "its JavaScript";\n\n\nconsole.log(str.indexOf("java")) // -1\nconsole.log(str.indexOf("Java")) // 4\n\nconsole.log(str.indexOf("i", 4)) // 11, поиск с позиции 4\n\n\n// ~n -> -(n+1)\n// короткая запись\nif (~str.indexOf(txt)) {\n\t// есть совпадение ..\n}',d:"Поиск вхождения подстроки",p:"<i>indexOf(), lastIndexOf()</i>",a:"Возвращает позицию, на которой находится подстрока или -1, если ничего не найдено\n\n<code>str.indexOf(substr, start);</code>\n\n Метод lastIndexOf() ищет с конца строки.",r:2},{f:'var str = "JavaScript";\n\nconsole.log( str.substr(4) ); ** // "Script"\nconsole.log( str.substr(4, 3) ); // "Scr"\n\n\nconsole.log( str.slice(4) ); **&nbsp; // "Script"\nconsole.log( str.slice(1, 4) ); &nbsp;// "ava"\nconsole.log( str.slice(4, -1) ); // "Scrip" \nconsole.log( str.slice(-1) ); ** // "t" \n',d:"Взятие подстроки",p:"substr(), slice()",a:"<code>substr(start [, length])</code>\nИщет с позиции start - length символов, или до конца строки;\n\n<code>slice(start [, end])</code>\nВозвращает часть строки от позиции start до, но не включая, позиции end.",r:2},{f:"String.fromCharCode(1072) // 'a'",d:"Возвращает символ по коду code",p:"String.fromCharCode()",a:"<code>String.fromCharCode(code)</code>",r:2},{f:"\"альтернатива\".charCodeAt(0) // 1072, 'а'",d:"Возвращает код символа на позиции pos.",p:"charCodeAt()",a:"Отсчет позиции начинается с нуля.\n\n<code>str.charCodeAt(pos)</code>",r:2},{f:"'арбуз'.localeCompare('груша') // -1",d:"Метод возвращает -1, если str < str2, \n1, если str > str2 и 0, если они равны.",p:"localeCompare() [IE11]",a:"<code>str.localeCompare(str2)</code>",r:2},{f:'"Учим JavaScript!".search( /java/i );  // 5',d:"Возвращает позицию первого совпадения или -1, если ничего не найдено.",p:"search()",a:"Ограничение метода search – он всегда ищет только первое совпадение.\n\n <code>str.search( /regexp/flags )</code>",r:3},{f:"\nlet str = \"javascript - это гибкий язык!\";\n\nlet result = str.match( /java(SCRIPT)/i );\n\nconsole.log( result[0] ); // javascript (всё совпадение полностью)\nconsole.log( result[1] ); // script (часть совпадения, соответствующая скобкам)\nconsole.log( result.index ); // 0\nconsole.log( result.input ); // 'javascript - это гибкий язык!'",d:"Возвращает одно, первое совпадение.",p:"match() <small>[ без флага g ]</small>",a:"Результат вызова – массив, состоящий из этого совпадения, с дополнительными свойствами \n\n<b>index</b> – позиция, на которой оно обнаружено и \n<b>input</b> – строка, в которой был поиск.\n\nЕсли часть шаблона обозначена скобками(карманы), то она станет отдельным элементом массива.",r:3},{f:'let str = "Бонд. Джеймс Бонд!";\n\nlet result = str.match( /Бонд/ig );\n\nconsole.log( result ); // Бонд, Бонд',d:"Возвращает обычный массив из всех совпадений.",p:"match() <small>[ с флагом g ]</small>",a:"Никаких <b>дополнительных свойств у массива нет</b>, карманы не сохраняются!",r:3},{f:"console.log( '12-34-567'.split(/-/) ) // [12, 34, 567]",d:"Разбивает строку в массив по разделителю – регулярному выражению regexp или подстроке substr.",p:"split()",a:"<code>str.split(reg|substr, limit)</code>",r:3},{f:'let str = "Александр Пушкин";\n\nconsole.log(str.replace(/Александр Пушкин/, \'Великий $&!\')); \n// Великий Александр Пушкин!\n\n\nconsole.log(str.replace(/(Александр) (Пушкин)/, replacer)); \n// Пушкин, Александр\n\nfunction replacer(str, name, surname, offset, s) {\n\treturn surname + ", " + name;\n}\n',d:"Заменяет совпадения на строку или результат возврата функции",p:"replace()",a:'При вызове со строкой замены replace всегда заменяет <b>только первое</b> совпадение.\nЧтобы заменить <b>все совпадения</b>, нужно использовать для поиска регулярное выражение /.../g\n\n<code>str.replace(reg, str)</code>\n\nспецсимволы замены:\n$$ - Вставляет "$".\n$& - Вставляет всё найденное совпадение.\n$` - Вставляет часть строки до совпадения.\n$\' - Вставляет часть строки после совпадения.\n$n - где n -- цифра или двузначное число, обозначает n-ю по счёту скобку, слева-направо.\n\n<code>str.replace(reg, fn)</code>\n\nФункция - получает следующие аргументы:\nstr – найденное совпадение,\np1, p2, ..., pn – содержимое скобок (если есть),\noffset – позиция, на которой найдено совпадение,\nstring – исходная строка.\n\nЕсли скобок в регулярном выражении нет, то у функции всегда будет ровно 3 аргумента.',r:3},{f:'let str = "Солнце - это звезда!";\n\n// эти две проверки идентичны\nconsole.log( /да/i.test(str) ); // true\nconsole.log( ~str.search(/да/i) ); // true',d:"Проверяет, есть ли хоть одно совпадение в строке str. Возвращает true/false.",p:"test()",a:"Работает так же, как и проверка str.search(reg) != -1\n\n<code>regexp.test(str)</code>",r:3},{f:"let str = 'Инфо по JavaScript можно найти на www.javascript.ru';\n\nlet regexp = /javascript/ig;\nlet result;\n\n\nconsole.log( \"Начальное значение lastIndex: \" + regexp.lastIndex );\n\n\nwhile (result = regexp.exec(str)) {\n\tconsole.log( 'Найдено: ' + result[0] + ' \n \t\tна позиции:' + result.index );\n\tconsole.log( 'Свойство lastIndex: ' + regexp.lastIndex );\n}\n\nconsole.log( 'Конечное значение lastIndex: ' + regexp.lastIndex );\n\n\n// Можно заставить regexp.exec искать сразу с нужной позиции, если поставить lastIndex вручную\n\n\nregexp.lastIndex = 30;\n\nconsole.log( regexp.exec(str).index ); // 38, поиск начат с 30-й позиции",d:"Ищет все совпадения и карманы в них.",p:"exec()",a:"\n<code>regexp.exec(str)</code>\n\nЕсли флага g нет, то regexp.exec(str) ищет и возвращает первое совпадение, является полным аналогом вызова str.match(reg).\n\nЕсли флаг g есть, то вызов regexp.exec возвращает первое совпадение и запоминает его позицию в свойстве regexp.lastIndex. \nПоследующий поиск он начнёт уже с этой позиции. Если совпадений не найдено, то сбрасывает regexp.lastIndex в ноль.\n\nЭто используют для поиска всех совпадений в цикле! Найденные результаты последовательно помещаются в result, причём находятся там в том же формате, что и match – с учётом скобок, со свойствами result.index и result.input.",r:3},{f:"/-?\\d+(\\.\\d+)?/g // десятичное число\n\n/<[a-z][a-z0-9]*>/i // открывающий HTML-тег без атрибутов\n\n/<\\/?[a-z][a-z0-9]*>/i // открывающий или закрывающий HTML-тег без атрибутов\n\n/#([a-f0-9]{3}){1,2}\\b/gi // цвет в формате #abc или #abcdef\n\n/^[0-9a-f]{2}(:[0-9a-f]{2}){5}$/i // MAC-адрес\n// например '01:23:54:67:89:AF'",d:"",p:"Рецепты по методам Regexp",a:"<big>Для поиска только одного совпадения:</big>\n- Найти позицию первого совпадения – str.search(reg).\n- Найти само совпадение – str.match(reg).\n- Проверить, есть ли хоть одно совпадение – regexp.test(str) или str.search(reg) != -1.\n- Найти совпадение с нужной позиции – regexp.exec(str), начальную позицию поиска задать в regexp.lastIndex.\n\n<big>Для поиска всех совпадений:</big>\n- Найти массив совпадений – str.match(reg), с флагом g.\n- Получить все совпадения, с подробной информацией о каждом – regexp.exec(str) с флагом g, в цикле.\n\n<big>Для поиска-и-замены:</big>\n- Замена на другую строку или результат функции -- `str.replace(reg, str|fn)`\n\n<big>Для разбивки строки на части:</big>\n- str.split(str|reg)",r:3},{f:'let names = ["Юра", "Саша", "Петя"];\n\n\nconsole.log( names.pop() ); // удалили "Петя"\n\nconsole.log( names ); // Юра, Саша\n\n\nconsole.log( names.push("Серега") ); // 3, добавили "Серега"\n\nconsole.log( names ); // Юра, Саша, Серега\n\n\nconsole.log( names.shift() ); // удалили "Юра"\n\nconsole.log( names ); // Саша, Серега\n\n\nconsole.log( names.unshift("Вася") ); // 3, добавили "Вася"\n\nconsole.log( names ); // Вася, Саша, Серега',d:"Обработка начала и конца массива",p:"pop(), push(), shift(), unshift()",a:"\n<code>arr.pop()</code>\nУдаляет последний элемент из массива и возвращает его.\n\n<code>arr.push(elem[, elements])</code>\nДобавляет элемент(ы) в конец массива, возвращая новую длину.\n\n<code>arr.shift()</code>\nУдаляет из массива первый элемент и возвращает его.\n\n<code>arr.unshift(elem[, elements])</code>\nДобавляет элемент(ы) в начало массива, возвращая новую длину.",r:4},{f:"",d:"",p:"()",a:"",r:4},{f:"",d:"",p:"()",a:"",r:4},{f:"",d:"",p:"()",a:"",r:4}],JQ=[{f:"afterAppend9",d:"Description - jq",p:"PreDescription",a:"AfterDescription",r:9},{f:"beforeAppend8",d:"Description-1 - jq",p:"PreDescription2",r:8},{f:"AppendJQ77",d:"Description-1 - jq",p:"PreDescription2",r:7}],AJ=[{f:"ajax is out of Data",d:"Ajax is out of Data",p:"PreDescription",a:"AfterDescription",r:10}],BS=[{f:"bootstrap4ik",d:"Description - Math.max()",p:"PreDescription",a:"AfterDescription",r:19}],FD=[{f:"foundatka4ik",d:"Description - Math.max()",p:"PreDescription",a:"AfterDescription",r:1111}],TS=[{f:"TS is out of Data",d:"TS is out of Data",p:"PreDescription",a:"AfterDescription",r:1}],AN=[{f:"Angular is out of Data",d:"Angular is out of Data",p:"PreDescription",a:"AfterDescription",r:1}],PUG=[{f:"pug is out of Data",d:"pug is out of Data",p:"PreDescription",a:"AfterDescription",r:1}],GIT=[{f:"git is out of Data",d:"git is out of Data",p:"PreDescription",a:"AfterDescription",r:1}],SAS=[{f:"sass is out of Data",d:"sass is out of Data",p:"PreDescription",a:"AfterDescription",r:1}];function showBody(){setTimeout(function(){$("body").fadeIn(600),$("html").css("background","transparent"),$(".cbalink").removeClass(".cbalink")},200)}function shakeArray(e){e.sort(function(){return Math.random()-.5})}function writeToLS(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"hoc";localStorage[t]=JSON.stringify(e)}$(function(){var e=new Render("Hello!"),t=$(".languages");$(".settings");$("[type=checkbox]",t).on("click",function(){e.getActiveLanguages(),console.log(e.lsd),e.stop();var t=$(this).attr("id");if(this.checked){e.lsd[t]=!0,$(this).parent().parent().addClass("is-active").find(".lang_sections").slideDown(200);var n=$(this).parent().parent();n.find(".element.is-active:not(.check-all)").length||(n.find(".element:not(.check-all)").addClass("is-active"),n.find(".element.check-all").addClass("is-active").text("Отменить все"))}else e.lsd[t]=!1,$(this).parent().parent().removeClass("is-active").find(".lang_sections").slideUp(200);writeToLS(e.lsd),console.log(e._countLanguages),e.menuGetActives()}),$("#random:enabled").on("click",function(){this.checked?e.random=!0:e.random=!1,e.lsd.random=e.random,writeToLS(e.lsd),e.stop()}),$("#auto:enabled").on("click",function(){this.checked?e.auto=!0:e.auto=!1,e.lsd.auto=e.auto,writeToLS(e.lsd),e.stop()}),$(window).on("keydown",function(t){var n=t.keyCode;32==n||39==n||38==n||107==n?e.step():40==n||37==n||109==n?e.stepPrev():13==n?$(".control__start-btn").trigger("click"):27==n||8!=n&&77!=n||$(".control__mix-btn").trigger("click")}),$(".control__start-btn").on("click",function(){$(this).hasClass("is-started")?e.stop():e.start()}),$(".control__prev-btn").on("click",function(){$(this).hasClass("is-disabled")||e.stepPrev()}),$(".control__next-btn").on("click",function(){$(this).hasClass("is-disabled")||e.step()}),$(".control__mix-btn").on("click",function(){$(this).hasClass("is-disabled")||(e.shakeData(),e.step())});var n=void 0,s=void 0,a=void 0,r=void 0;document.addEventListener("touchstart",function(e){n=e.changedTouches[0],a=new Date},!1),document.addEventListener("touchend",function(t){if(!((r=new Date-a)<60||r>600)){s=t.changedTouches[0];var i=Math.abs(n.pageX-s.pageX),o=Math.abs(n.pageY-s.pageY);(i>30||o>30)&&(i>o?s.pageX<n.pageX?e.step():e.stepPrev():(s.pageY,n.pageY))}},!1),$(".settings-button").on("click",function(){$(".main-menu").toggleClass("is-active"),$(".main-menu").hasClass("is-active")?($(".backdrop").css("display","block").animate({opacity:.3},300),$("body").addClass("body--blured")):($(".backdrop").css("display","none").animate({opacity:0},250),$("body").removeClass("body--blured"))}),$(".main-menu .element").on("click",function(){$(this).toggleClass("is-active"),e.menuSelectSection($(this))}),$(".backdrop").on("click",function(){$(".backdrop").css("display","none").animate({opacity:0},250),$(".main-menu").removeClass("is-active"),$("body").removeClass("body--blured")}),$(".checkbox, .radio, .control, .count-of-lng, .bottom-block, h1, h2, h3").on("selectstart",function(){return!1}),$(".footer__handle").on("click",function(){$(".footer").toggleClass("active")})}),$(document).foundation(),$(window).load(showBody());